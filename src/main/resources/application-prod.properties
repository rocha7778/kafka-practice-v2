spring.application.name=producto-command-service
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.datasource.database=${MYSQL_DATABASE:product}
spring.datasource.host=${MYSQL_HOST:localhost}
spring.datasource.port=${MYSQL_PORT:3306}
spring.datasource.username=${MYSQL_USERNAME:root}
spring.datasource.password=${MYSQL_ROOT_PASSWORD:123456}
spring.datasource.url=jdbc:mysql://${spring.datasource.host}:${spring.datasource.port}/${spring.datasource.database}?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=America/Bogota
spring.jpa.database=mysql
spring.jpa.hibernate.ddl-auto=update

server.port=8080

# docker create --name mysqldb --network springboot-mysql-net -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_USER=root -e MYSQL_DATABASE=product mysql
# docker create -p 3306:3306 --name mysqldb --network springboot-mysql-net  -e MYSQL_ROOT_PASSWORD=123456 -e MYSQL_DATABASE=product mysql 

# docker network create springboot-mysql-net
